# duckdb

[![DuckDB
logo](https://duckdb.org/images/logo-dl/DuckDB_Logo-horizontal.svg)](https://r.duckdb.org/)

[DuckDB](https://duckdb.org/) is an in-process SQL OLAP database
management system. It is designed to support analytical query workloads
and is optimized for fast query execution. This repository contains the
R bindings for DuckDB.

## Installation from CRAN

Installing the package from source may take up to an hour. Consider
using binary Windows/macOS packages from CRAN for recent R versions, or
[Posit Package Manager](https://p3m.dev/) for various flavors of Linux
or older R versions.

``` r
install.packages("duckdb")
```

## Installation from r-universe

Installing the package from source may take up to an hour. Binaries are
available for recent versions of R. Review
<https://docs.r-universe.dev/install/binaries.html> for configuring
installation of binary packages on Linux.

``` r
install.packages("duckdb", repos = c("https://duckdb.r-universe.dev", "https://cloud.r-project.org"))
```

## Installation from GitHub

Installing the package from GitHub may take up to an hour.

``` r
# install.packages("pak", repos = sprintf("https://r-lib.github.io/p/pak/stable/%s/%s/%s", .Platform$pkgType, R.Version()$os, R.Version()$arch))
pak::pak("duckdb/duckdb-r")
```

## User Guide

See the [R API in the DuckDB
documentation](https://duckdb.org/docs/api/r).

## Building

To build the R package, you first need to clone this repository and
install the dependencies:

``` r
# install.packages("pak", repos = sprintf("https://r-lib.github.io/p/pak/stable/%s/%s/%s", .Platform$pkgType, R.Version()$os, R.Version()$arch))
pak::pak()
```

Then, install:

``` sh
~duckdb-r: R CMD INSTALL .
```

Set the `MAKEFLAGS` environment variable to `-j8` or similar for
parallel builds. Configure `ccache` for faster repeated builds.

If you wish to test new DuckDB functionality with duckdb-r, make sure
your clone of `duckdb-r` is one level deeper than your clone of `duckdb`
(e.g.Â `R/duckdb-r` and `duckdb`). Then run the following commands:

``` sh
~ (cd duckdb && git checkout {{desired_branch}})
~ (cd R/duckdb-r && scripts/vendor.sh)
~ (cd R/duckdb-r && R CMD INSTALL .)
```

It helps if both the duckdb directory and duckdb-r directory are clean.

## Vendoring

This package includes a vendored copy of the DuckDB C++ library. The
vendoring process is automated and runs hourly to synchronize with the
upstream DuckDB repository. For detailed information about how vendoring
works, the relationship between `main` and
[`next`](https://rdrr.io/r/base/Control.html) branches, and manual
vendoring procedures, see `scripts/VENDORING.md`.

## Contributors

Thanks to all
[contributors](https://github.com/duckdb/duckdb-r/graphs/contributors)
to this repository, and to those who contributed when the code was still
hosted in the main [duckdb/duckdb](https://github.com/duckdb/duckdb)
repository:

Mark Raasveldt, Pedro Holanda, Tom Ebergen, Reijo Sund, Nicolas Bennett,
Patrik Schratz, Tishj, Laurens Kuiper, Sam Ansmink, Andy Teucher, Hadley
Wickham, Jonathan Keane, Lindsay Wray, Richard Wesley, Elliana May,
Edwin de Jonge, Dewey Dunnington, Carlo Piovesan, Andre Beckedorf, Tania
Bogatsch, Pedro Ferreira, Maximilian Girlich, James Lamb, James Atkins,
usurai, Ubuntu, Noam Ross, Michael Antonov, Jeroen Ooms, Jamie Lentin,
Jacob, and Chilarai.

# Package index

## Getting started

- [`sql_query()`](https://r.duckdb.org/reference/sql_query.md)
  [`sql_exec()`](https://r.duckdb.org/reference/sql_query.md)
  **\[experimental\]** : Run an SQL query or statement
- [`default_conn()`](https://r.duckdb.org/reference/default_conn.md)
  **\[experimental\]** : Get the default connection

## Driver

- [`duckdb()`](https://r.duckdb.org/reference/duckdb.md)
  [`duckdb_shutdown()`](https://r.duckdb.org/reference/duckdb.md)
  [`duckdb_adbc()`](https://r.duckdb.org/reference/duckdb.md)
  [`dbConnect(`*`<duckdb_driver>`*`)`](https://r.duckdb.org/reference/duckdb.md)
  [`dbDisconnect(`*`<duckdb_connection>`*`)`](https://r.duckdb.org/reference/duckdb.md)
  : Connect to a DuckDB database instance
- [`dbDataType(`*`<duckdb_driver>`*`)`](https://r.duckdb.org/reference/duckdb_driver-class.md)
  [`dbGetInfo(`*`<duckdb_driver>`*`)`](https://r.duckdb.org/reference/duckdb_driver-class.md)
  [`dbIsValid(`*`<duckdb_driver>`*`)`](https://r.duckdb.org/reference/duckdb_driver-class.md)
  [`show(`*`<duckdb_driver>`*`)`](https://r.duckdb.org/reference/duckdb_driver-class.md)
  : DuckDB driver class

## Connection

- [`dbAppendTable(`*`<duckdb_connection>`*`)`](https://r.duckdb.org/reference/duckdb_connection-class.md)
  [`dbBegin(`*`<duckdb_connection>`*`)`](https://r.duckdb.org/reference/duckdb_connection-class.md)
  [`dbCommit(`*`<duckdb_connection>`*`)`](https://r.duckdb.org/reference/duckdb_connection-class.md)
  [`dbDataType(`*`<duckdb_connection>`*`)`](https://r.duckdb.org/reference/duckdb_connection-class.md)
  [`dbExistsTable(`*`<duckdb_connection>`*`,`*`<ANY>`*`)`](https://r.duckdb.org/reference/duckdb_connection-class.md)
  [`dbGetInfo(`*`<duckdb_connection>`*`)`](https://r.duckdb.org/reference/duckdb_connection-class.md)
  [`dbIsValid(`*`<duckdb_connection>`*`)`](https://r.duckdb.org/reference/duckdb_connection-class.md)
  [`dbListFields(`*`<duckdb_connection>`*`,`*`<character>`*`)`](https://r.duckdb.org/reference/duckdb_connection-class.md)
  [`dbListTables(`*`<duckdb_connection>`*`)`](https://r.duckdb.org/reference/duckdb_connection-class.md)
  [`dbQuoteIdentifier(`*`<duckdb_connection>`*`,`*`<ANY>`*`)`](https://r.duckdb.org/reference/duckdb_connection-class.md)
  [`dbQuoteLiteral(`*`<duckdb_connection>`*`)`](https://r.duckdb.org/reference/duckdb_connection-class.md)
  [`dbRemoveTable(`*`<duckdb_connection>`*`,`*`<character>`*`)`](https://r.duckdb.org/reference/duckdb_connection-class.md)
  [`dbRollback(`*`<duckdb_connection>`*`)`](https://r.duckdb.org/reference/duckdb_connection-class.md)
  [`dbSendQuery(`*`<duckdb_connection>`*`,`*`<character>`*`)`](https://r.duckdb.org/reference/duckdb_connection-class.md)
  [`dbWriteTable(`*`<duckdb_connection>`*`,`*`<character>`*`,`*`<data.frame>`*`)`](https://r.duckdb.org/reference/duckdb_connection-class.md)
  [`show(`*`<duckdb_connection>`*`)`](https://r.duckdb.org/reference/duckdb_connection-class.md)
  : DuckDB connection class

## Result

- [`duckdb_fetch_arrow()`](https://r.duckdb.org/reference/duckdb_result-class.md)
  [`duckdb_fetch_record_batch()`](https://r.duckdb.org/reference/duckdb_result-class.md)
  [`dbBind(`*`<duckdb_result>`*`)`](https://r.duckdb.org/reference/duckdb_result-class.md)
  [`dbClearResult(`*`<duckdb_result>`*`)`](https://r.duckdb.org/reference/duckdb_result-class.md)
  [`dbColumnInfo(`*`<duckdb_result>`*`)`](https://r.duckdb.org/reference/duckdb_result-class.md)
  [`dbFetch(`*`<duckdb_result>`*`)`](https://r.duckdb.org/reference/duckdb_result-class.md)
  [`dbGetInfo(`*`<duckdb_result>`*`)`](https://r.duckdb.org/reference/duckdb_result-class.md)
  [`dbGetRowCount(`*`<duckdb_result>`*`)`](https://r.duckdb.org/reference/duckdb_result-class.md)
  [`dbGetRowsAffected(`*`<duckdb_result>`*`)`](https://r.duckdb.org/reference/duckdb_result-class.md)
  [`dbGetStatement(`*`<duckdb_result>`*`)`](https://r.duckdb.org/reference/duckdb_result-class.md)
  [`dbHasCompleted(`*`<duckdb_result>`*`)`](https://r.duckdb.org/reference/duckdb_result-class.md)
  [`dbIsValid(`*`<duckdb_result>`*`)`](https://r.duckdb.org/reference/duckdb_result-class.md)
  [`show(`*`<duckdb_result>`*`)`](https://r.duckdb.org/reference/duckdb_result-class.md)
  : DuckDB Result Set

## Interfaces

- [`tbl_file()`](https://r.duckdb.org/reference/backend-duckdb.md)
  [`tbl_function()`](https://r.duckdb.org/reference/backend-duckdb.md)
  [`tbl_query()`](https://r.duckdb.org/reference/backend-duckdb.md)
  [`simulate_duckdb()`](https://r.duckdb.org/reference/backend-duckdb.md)
  : DuckDB SQL backend for dbplyr
- [`duckdb_register()`](https://r.duckdb.org/reference/duckdb_register.md)
  [`duckdb_unregister()`](https://r.duckdb.org/reference/duckdb_register.md)
  : Register a data frame as a virtual table
- [`duckdb_register_arrow()`](https://r.duckdb.org/reference/duckdb_register_arrow.md)
  [`duckdb_unregister_arrow()`](https://r.duckdb.org/reference/duckdb_register_arrow.md)
  [`duckdb_list_arrow()`](https://r.duckdb.org/reference/duckdb_register_arrow.md)
  : Register an Arrow data source as a virtual table
- [`duckdb_read_csv()`](https://r.duckdb.org/reference/duckdb_read_csv.md)
  : Reads a CSV file into DuckDB
- [`duckdb_explain-class`](https://r.duckdb.org/reference/duckdb_explain-class.md)
  [`duckdb_explain`](https://r.duckdb.org/reference/duckdb_explain-class.md)
  [`print.duckdb_explain`](https://r.duckdb.org/reference/duckdb_explain-class.md)
  : DuckDB EXPLAIN query tree

