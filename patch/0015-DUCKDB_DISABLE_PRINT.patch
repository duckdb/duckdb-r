From 4eb5358996358ec8d64c6614846a6ae83d5d66fb Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Kirill=20M=C3=BCller?= <kirill@cynkra.com>
Date: Fri, 16 May 2025 03:50:15 +0200
Subject: [PATCH] DUCKDB_DISABLE_PRINT

---
 .../duckdb/execution/operator/csv_scanner/csv_state_machine.hpp | 2 ++
 src/duckdb/src/logging/log_storage.cpp                          | 2 ++
 2 files changed, 4 insertions(+)

diff --git a/src/duckdb/src/include/duckdb/execution/operator/csv_scanner/csv_state_machine.hpp b/src/duckdb/src/include/duckdb/execution/operator/csv_scanner/csv_state_machine.hpp
index 71eb1c11e..eca9fec11 100644
--- a/src/duckdb/src/include/duckdb/execution/operator/csv_scanner/csv_state_machine.hpp
+++ b/src/duckdb/src/include/duckdb/execution/operator/csv_scanner/csv_state_machine.hpp
@@ -129,12 +129,14 @@ public:
 	}
 
 	void Print() const {
+#ifndef DUCKDB_DISABLE_PRINT
 		std::cout << "State Machine Options" << '\n';
 		std::cout << "Delim: " << state_machine_options.delimiter.GetValue() << '\n';
 		std::cout << "Quote: " << state_machine_options.quote.GetValue() << '\n';
 		std::cout << "Escape: " << state_machine_options.escape.GetValue() << '\n';
 		std::cout << "Comment: " << state_machine_options.comment.GetValue() << '\n';
 		std::cout << "---------------------" << '\n';
+#endif
 	}
 	//! The Transition Array is a Finite State Machine
 	//! It holds the transitions of all states, on all 256 possible different characters
diff --git a/src/duckdb/src/logging/log_storage.cpp b/src/duckdb/src/logging/log_storage.cpp
index 625757490..253db8514 100644
--- a/src/duckdb/src/logging/log_storage.cpp
+++ b/src/duckdb/src/logging/log_storage.cpp
@@ -37,12 +37,14 @@ StdOutLogStorage::~StdOutLogStorage() {
 
 void StdOutLogStorage::WriteLogEntry(timestamp_t timestamp, LogLevel level, const string &log_type,
                                      const string &log_message, const RegisteredLoggingContext &context) {
+#ifndef DUCKDB_DISABLE_PRINT
 	std::cout << StringUtil::Format(
 	    "[LOG] %s, %s, %s, %s, %s, %s, %s, %s\n", Value::TIMESTAMP(timestamp).ToString(), log_type,
 	    EnumUtil::ToString(level), log_message, EnumUtil::ToString(context.context.scope),
 	    context.context.connection_id.IsValid() ? to_string(context.context.connection_id.GetIndex()) : "NULL",
 	    context.context.transaction_id.IsValid() ? to_string(context.context.transaction_id.GetIndex()) : "NULL",
 	    context.context.thread_id.IsValid() ? to_string(context.context.thread_id.GetIndex()) : "NULL");
+#endif
 }
 
 void StdOutLogStorage::WriteLogEntries(DataChunk &chunk, const RegisteredLoggingContext &context) {
-- 
2.48.1

