From 7b02d056186a1f2c68f6cab98d2b1779d7b07acb Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Kirill=20M=C3=BCller?= <kirill@cynkra.com>
Date: Tue, 17 Jun 2025 04:42:37 +0200
Subject: [PATCH] chore: Remove unused member

---
 src/duckdb/src/include/duckdb/main/connection.hpp | 4 ----
 src/duckdb/src/main/connection.cpp                | 2 --
 2 files changed, 6 deletions(-)

diff --git a/src/duckdb/src/include/duckdb/main/connection.hpp b/src/duckdb/src/include/duckdb/main/connection.hpp
index c27d84d21..92520a51c 100644
--- a/src/duckdb/src/include/duckdb/main/connection.hpp
+++ b/src/duckdb/src/include/duckdb/main/connection.hpp
@@ -251,10 +251,6 @@ public:
 	}
 	// NOLINTEND
 
-protected:
-	//! Identified used to uniquely identify connections to the database.
-	connection_t connection_id;
-
 private:
 	unique_ptr<QueryResult> QueryParamsRecursive(const string &query, vector<Value> &values);
 
diff --git a/src/duckdb/src/main/connection.cpp b/src/duckdb/src/main/connection.cpp
index e561a3cb9..484f1b0f2 100644
--- a/src/duckdb/src/main/connection.cpp
+++ b/src/duckdb/src/main/connection.cpp
@@ -37,13 +37,11 @@ Connection::Connection(DuckDB &database) : Connection(*database.instance) {
 Connection::Connection(Connection &&other) noexcept : warning_cb(nullptr) {
 	std::swap(context, other.context);
 	std::swap(warning_cb, other.warning_cb);
-	std::swap(connection_id, other.connection_id);
 }
 
 Connection &Connection::operator=(Connection &&other) noexcept {
 	std::swap(context, other.context);
 	std::swap(warning_cb, other.warning_cb);
-	std::swap(connection_id, other.connection_id);
 	return *this;
 }
 
-- 
2.49.0

