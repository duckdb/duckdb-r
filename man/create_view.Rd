% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_view.R
\name{create_view}
\alias{create_view}
\title{Create or Replace a View from a \code{tbl} in DuckDB}
\usage{
create_view(data, view_name)
}
\arguments{
\item{data}{A \code{tbl_dbi} object, typically produced by \code{dplyr::tbl()} or \code{dbplyr} pipelines.}

\item{view_name}{A character string specifying the name of the view to create.}
}
\value{
Invisibly returns the result of \code{DBI::dbExecute()}, typically the number of rows affected (0 for views).
}
\description{
This function creates or replaces a view in DuckDB from a \code{dbplyr}-based \code{tbl} object.
It converts the lazy query associated with the \code{tbl} into SQL and defines a named view in the database.
}
\details{
The function uses \verb{CREATE OR REPLACE VIEW}, which means it will overwrite an existing view with the same name.
The view is created in the same DuckDB connection used by the \code{tbl}. The query is lazily evaluated.
}
\examples{
  con <- DBI::dbConnect(duckdb::duckdb())
  copy_to(con, tibble(a = 1:3, b = letters[1:3]), "source_table", temporary = TRUE)
  data <- dplyr::tbl(con, "source_table") \%>\% dplyr::filter(a > 1)
  create_view(data, "filtered_view")
  DBI::dbGetQuery(con, "SELECT * FROM filtered_view")
  DBI::dbDisconnect(con, shutdown = TRUE)

}
