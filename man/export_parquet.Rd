% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/export_parquet.R
\name{export_parquet}
\alias{export_parquet}
\title{Export a DuckDB table to a Parquet file using COPY TO}
\usage{
export_parquet(data, output, options = NULL, print_sql = FALSE)
}
\arguments{
\item{data}{A \code{tbl_dbi} object representing a DuckDB table or query.}

\item{output}{Path to the output Parquet file (a single character string).}

\item{options}{A named list of key-value COPY options. Values can be character,
numeric, logical, or vectors (which will be converted to tuples).
Examples include \code{compression = "zstd"} or \code{ROW_GROUP_SIZE = 1000000}.
see https://duckdb.org/docs/sql/statements/copy.html#parquet-options for details.}
}
\value{
Invisibly returns the number of rows affected by the \verb{COPY TO} command.
The function will stop with an error if the input types are invalid.
}
\description{
This function exports a \code{dbplyr}-based table or SQL query to a Parquet file
using DuckDB's native \verb{COPY TO} command.
}
\details{
Option values of length >1 are wrapped in parentheses and comma-separated
(e.g., for \code{columns = c("a", "b")}, DuckDB will receive \code{COLUMNS (a,b)}).
}
\examples{
con <- DBI::dbConnect(duckdb::duckdb())
DBI::dbWriteTable(con, "iris", iris)
tbl <- dplyr::tbl(con, "iris")
export_parquet(tbl, "iris.parquet", options = list(compression = "zstd"))
export_parquet(tbl, "iris_ds", options = list(partition_by = "Species", row_group_size = 1000))

}
